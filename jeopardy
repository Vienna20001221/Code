package jeopardy;

import java.awt.Color;
import java.io.File;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JFrame;
import javax.swing.Timer;


/**
 *
 * @author Vienna, Linxuan, Harleen
 */
public class Question extends javax.swing.JFrame {
private int questionNum;
private String theAnswer;
int questionScore;
    /**
     * Creates new form Question
     */
    public Question() {
        initComponents();
       
    }
    // Vienna: creat a constructor
    public Question(int questionnum, String questiontype){
        initComponents();
        questionNum = questionnum;
        // Vienna: read the XMLquestions file
        try{
            File xmlFile = new File("src/jeopardy/XMLquestions.xml");

            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
            DocumentBuilder db = dbf.newDocumentBuilder();
            Document d = db.parse(xmlFile);

            NodeList list = d.getElementsByTagName(questiontype);

            for(int i=0; i<list.getLength(); i++){
                Node node = list.item(i);
                /* Vienna: used category name and the command get from previous screen
                   to find the question and 4 choices
                */
                if(questionNum == Integer.parseInt(list.item(i).getAttributes().getNamedItem("score").getNodeValue())){
                    questionScore = Integer.parseInt(list.item(i).getAttributes().getNamedItem("score").getNodeValue());
                    if(node.getNodeType()==Node.ELEMENT_NODE){
                        Element element = (Element) node;
                        System.out.println("Title is： " + element.getElementsByTagName("Title").item(0).getTextContent());
                        System.out.println("right answer is; "+ element.getElementsByTagName("RightAnswer").item(0).getTextContent());
                        this.theAnswer = element.getElementsByTagName("RightAnswer").item(0).getTextContent();
                        // Vienna: display the question in the label
                        this.JTitle.setText(element.getElementsByTagName("Title").item(0).getTextContent());                        
                        Element subelement = (Element)element.getElementsByTagName("Answers").item(0);
                        NodeList sublist = subelement.getElementsByTagName("Item");

                        // Vienna: display the 4 choices in the buttons
                        for (int inum=0; inum<sublist.getLength();inum++){
                            System.out.print("item " + sublist.item(inum).getAttributes().getNamedItem("Title").getNodeValue());
                            System.out.println(" " + sublist.item(inum).getTextContent());
                            switch(inum){
                                case 0:
                                    this.jButton2.setText(sublist.item(inum).getAttributes().getNamedItem("Title").getNodeValue()+ ". " + sublist.item(inum).getTextContent() );
                                    break;
                                case 1:
                                    this.jButton3.setText(sublist.item(inum).getAttributes().getNamedItem("Title").getNodeValue()+ ". " + sublist.item(inum).getTextContent() );
                                    break;
                                case 2:
                                    this.jButton4.setText(sublist.item(inum).getAttributes().getNamedItem("Title").getNodeValue()+ ". " + sublist.item(inum).getTextContent() );
                                    break;
                                case 3:
                                    this.jButton5.setText(sublist.item(inum).getAttributes().getNamedItem("Title").getNodeValue()+ ". " + sublist.item(inum).getTextContent() );
                                    
                            }
                        }
                    }                  
              }

            }            
        }
        catch(Exception e){
            System.out.println(e.toString());
        }   
        jLabel25.setVisible(false);   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        JTitle = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        ScoreLabel = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        TIMElABEL = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setLayout(null);

        JTitle.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        JTitle.setForeground(new java.awt.Color(255, 255, 255));
        JTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JTitle.setAutoscrolls(true);
        jPanel1.add(JTitle);
        JTitle.setBounds(20, 110, 740, 120);

        jButton2.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jButton2.setText("jbutton2");
        jButton2.setActionCommand("A");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(23, 240, 350, 25);

        jButton3.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jButton3.setText("jButton3");
        jButton3.setActionCommand("B");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(400, 240, 340, 25);

        jButton4.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jButton4.setText("jButton4");
        jButton4.setActionCommand("C");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(20, 350, 350, 25);

        jButton5.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jButton5.setText("jButton5");
        jButton5.setActionCommand("D");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(400, 350, 340, 25);

        jButton1.setText("Back");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(345, 410, 70, 23);

        ScoreLabel.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        ScoreLabel.setForeground(new java.awt.Color(255, 255, 255));
        ScoreLabel.setText("Score: ");
        jPanel1.add(ScoreLabel);
        ScoreLabel.setBounds(510, 20, 270, 40);

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("TIME'S UP: GAME OVER");
        jPanel1.add(jLabel25);
        jLabel25.setBounds(290, 430, 360, 60);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("TIME:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(510, 60, 130, 40);

        TIMElABEL.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(TIMElABEL);
        TIMElABEL.setBounds(580, 70, 60, 30);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jeopardy/Background.jpg"))); // NOI18N
        jPanel1.add(jLabel3);
        jLabel3.setBounds(0, 0, 790, 500);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        
        
        /* Harleen: set the timer to 60s
           display the timer on the top right corner of the screen
        */
        int i = 60;
       
        Timer T = new Timer(1000, new ActionListener() {
        @Override
        
        public void actionPerformed(ActionEvent ae) {
            i--;
         if (i>=0){
             TIMElABEL.setForeground(Color.white); 
             TIMElABEL.setText(""+i);
         }
         else{ 
          jButton2.setEnabled(false);
          jButton3.setEnabled(false);
          jButton4.setEnabled(false);
          jButton5.setEnabled(false);
          jLabel25.setVisible(true);
         } 
        }
    }); 
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {                                      
        // Vienna: go back to the category screen when 'back' button is clicked
        Category cat = new Category();
        cat.setVisible(true);
        cat.pack();
        cat.setLocationRelativeTo(null);
        cat.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }                                     

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        /* Vienna: when one of the choice button is clicked,
           use the checkAnswer method to check player's choice.
           The text will turn green if the player chooses the right answer,
           otherwise, the text will turn red.
        */
        String yourAnswer =  evt.getActionCommand();
        javax.swing.JButton thebutton = (javax.swing.JButton)evt.getSource();
        if(this.checkAnswer(yourAnswer)){
            thebutton.setForeground(Color.GREEN);
        }else{
            thebutton.setForeground(Color.red);
        }
        /* Linxuan: track the score of each question from the XML file
           and add up the score of all correct questions
           display them on the top right corner of the scrren
        */
        String a = Integer.toString(Jeopardy.getScore());
        String b = "Score: $" + a;
        ScoreLabel.setText(b);
        T.stop();
    }                                        

    private void formWindowOpened(java.awt.event.WindowEvent evt) {                                  
        T.start();
    }                                 

    // Vienna: check the player's choice with the right answer in the file
    private boolean checkAnswer(String youranswer){
        if (this.theAnswer.equals(youranswer)){
            System.out.println("Your are  Right");
            // Linxuan: add the correct question's score to the variable
            Jeopardy.addScore(questionScore);
            return true;
        }else{
            System.out.println("Your are wrong");
            return false;
        }
    }
    
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify                     
    private javax.swing.JLabel JTitle;
    private javax.swing.JLabel ScoreLabel;
    private javax.swing.JLabel TIMElABEL;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration                   

    

}
